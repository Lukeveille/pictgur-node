{
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/server.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nvar _debug2 = _interopRequireDefault(require(\"debug\"));\n\nvar _app = _interopRequireDefault(require(\"./app.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debug = (0, _debug2.default)('server');\n\nlet server = async () => {\n  debug('Starting server...');\n\n  let httpServer = _http.default.Server(_app.default);\n\n  _app.default.use(function (req, res) {\n    res.sendFile(_path.default.join(__dirname, '/../../build', 'index.html'));\n  });\n\n  httpServer.listen(_config.default.port, () => {\n    debug(`Server running on ${_config.default.port}. Try hitting '/api/health'...`);\n  });\n};\n\nserver();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkZWJ1ZyIsInNlcnZlciIsImh0dHBTZXJ2ZXIiLCJodHRwIiwiU2VydmVyIiwiYXBwIiwidXNlIiwicmVxIiwicmVzIiwic2VuZEZpbGUiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImxpc3RlbiIsImNvbmZpZyIsInBvcnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxJQUFJQSxLQUFLLEdBQUcscUJBQU8sUUFBUCxDQUFaOztBQUVBLElBQUlDLE1BQU0sR0FBRyxZQUFZO0FBQ3ZCRCxFQUFBQSxLQUFLLENBQUMsb0JBQUQsQ0FBTDs7QUFDQSxNQUFJRSxVQUFVLEdBQUdDLGNBQUtDLE1BQUwsQ0FBWUMsWUFBWixDQUFqQjs7QUFDQUEsZUFBSUMsR0FBSixDQUFRLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUMxQkEsSUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFDLGNBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixjQUFyQixFQUFxQyxZQUFyQyxDQUFiO0FBQ0QsR0FGRDs7QUFHQVYsRUFBQUEsVUFBVSxDQUFDVyxNQUFYLENBQWtCQyxnQkFBT0MsSUFBekIsRUFBK0IsTUFBTTtBQUNuQ2YsSUFBQUEsS0FBSyxDQUFFLHFCQUFvQmMsZ0JBQU9DLElBQUssZ0NBQWxDLENBQUw7QUFDRCxHQUZEO0FBR0QsQ0FURDs7QUFVQWQsTUFBTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvTHVrZXZlaWxsZS9Eb2N1bWVudHMvQ29kaW5nIFByb2plY3RzL0FwcHMvcGljdGd1ci1ub2RlL3NyYy9zZXJ2ZXIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHR0cCBmcm9tICdodHRwJ1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCBjb25maWcgZnJvbSAnY29uZmlnJ1xuaW1wb3J0IF9kZWJ1ZyBmcm9tICdkZWJ1ZydcbmltcG9ydCBhcHAgZnJvbSAnLi9hcHAuanMnXG52YXIgZGVidWcgPSBfZGVidWcoJ3NlcnZlcicpXG5cbmxldCBzZXJ2ZXIgPSBhc3luYyAoKSA9PiB7XG4gIGRlYnVnKCdTdGFydGluZyBzZXJ2ZXIuLi4nKVxuICBsZXQgaHR0cFNlcnZlciA9IGh0dHAuU2VydmVyKGFwcClcbiAgYXBwLnVzZShmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJy8uLi8uLi9idWlsZCcsICdpbmRleC5odG1sJykpXG4gIH0pXG4gIGh0dHBTZXJ2ZXIubGlzdGVuKGNvbmZpZy5wb3J0LCAoKSA9PiB7XG4gICAgZGVidWcoYFNlcnZlciBydW5uaW5nIG9uICR7Y29uZmlnLnBvcnR9LiBUcnkgaGl0dGluZyAnL2FwaS9oZWFsdGgnLi4uYClcbiAgfSlcbn1cbnNlcnZlcigpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "debug",
        "server",
        "httpServer",
        "http",
        "Server",
        "app",
        "use",
        "req",
        "res",
        "sendFile",
        "path",
        "join",
        "__dirname",
        "listen",
        "config",
        "port"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAIA,KAAK,GAAG,qBAAO,QAAP,CAAZ;;AAEA,IAAIC,MAAM,GAAG,YAAY;AACvBD,EAAAA,KAAK,CAAC,oBAAD,CAAL;;AACA,MAAIE,UAAU,GAAGC,cAAKC,MAAL,CAAYC,YAAZ,CAAjB;;AACAA,eAAIC,GAAJ,CAAQ,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC1BA,IAAAA,GAAG,CAACC,QAAJ,CAAaC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,EAAqC,YAArC,CAAb;AACD,GAFD;;AAGAV,EAAAA,UAAU,CAACW,MAAX,CAAkBC,gBAAOC,IAAzB,EAA+B,MAAM;AACnCf,IAAAA,KAAK,CAAE,qBAAoBc,gBAAOC,IAAK,gCAAlC,CAAL;AACD,GAFD;AAGD,CATD;;AAUAd,MAAM",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
      "sourcesContent": [
        "import http from 'http'\nimport path from 'path'\nimport config from 'config'\nimport _debug from 'debug'\nimport app from './app.js'\nvar debug = _debug('server')\n\nlet server = async () => {\n  debug('Starting server...')\n  let httpServer = http.Server(app)\n  app.use(function (req, res) {\n    res.sendFile(path.join(__dirname, '/../../build', 'index.html'))\n  })\n  httpServer.listen(config.port, () => {\n    debug(`Server running on ${config.port}. Try hitting '/api/health'...`)\n  })\n}\nserver()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1549495735530
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _pictures = _interopRequireDefault(require(\"./api/routes/pictures\"));\n\nvar _users = _interopRequireDefault(require(\"./api/routes/users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst publicRouter = _express.default.Router();\n\nconst apiRouter = _express.default.Router();\n\nconst app = (0, _express.default)();\n\n_mongoose.default.connect('mongodb+srv://node-shop:' + process.env.PICTGUR_MONGO_PW + '@cluster0-fvxju.mongodb.net/test?retryWrites=true', {\n  useNewUrlParser: true\n}).catch(err => {\n  console.log(err);\n});\n\n_mongoose.default.Promise = global.Promise;\napp.use((0, _cors.default)());\napp.use(_bodyParser.default.urlencoded({\n  extended: false\n}));\napp.use(_bodyParser.default.json({\n  limit: _config.default.bodyParserLimit\n}));\napp.use(_express.default.static(_path.default.join(__dirname, '/../../build'))); // Root routes\n\napp.use('/', publicRouter);\napp.use('/api', apiRouter); // API routes\n\napiRouter.use('/user', _users.default);\napiRouter.use('/pictures', _pictures.default);\napiRouter.get('/health', (req, res) => {\n  res.status(200).json({\n    apiStatus: \"Healthy!\"\n  });\n}); // Errors\n\napp.use((req, res, next) => {\n  const error = new Error('Could not find what you seek');\n  error.status = 404;\n  next(error);\n});\napp.use((error, req, res) => {\n  res.status(error.status || 500);\n  res.json({\n    error: {\n      message: error.message\n    }\n  });\n});\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwdWJsaWNSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiYXBpUm91dGVyIiwiYXBwIiwibW9uZ29vc2UiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIlBJQ1RHVVJfTU9OR09fUFciLCJ1c2VOZXdVcmxQYXJzZXIiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJQcm9taXNlIiwiZ2xvYmFsIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJsaW1pdCIsImNvbmZpZyIsImJvZHlQYXJzZXJMaW1pdCIsInN0YXRpYyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlclJvdXRlciIsInBpY3R1cmVSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJhcGlTdGF0dXMiLCJuZXh0IiwiZXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBR0MsaUJBQVFDLE1BQVIsRUFBckI7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHRixpQkFBUUMsTUFBUixFQUFsQjs7QUFDQSxNQUFNRSxHQUFHLEdBQUcsdUJBQVo7O0FBRUFDLGtCQUFTQyxPQUFULENBQ0UsNkJBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFEWixHQUVBLG1EQUhGLEVBSUU7QUFDRUMsRUFBQUEsZUFBZSxFQUFFO0FBRG5CLENBSkYsRUFRQ0MsS0FSRCxDQVFPQyxHQUFHLElBQUk7QUFBRUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVo7QUFBa0IsQ0FSbEM7O0FBVUFQLGtCQUFTVSxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCO0FBRUFYLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLG9CQUFSO0FBQ0FiLEdBQUcsQ0FBQ2EsR0FBSixDQUFRQyxvQkFBV0MsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FoQixHQUFHLENBQUNhLEdBQUosQ0FBUUMsb0JBQVdHLElBQVgsQ0FBZ0I7QUFBQ0MsRUFBQUEsS0FBSyxFQUFFQyxnQkFBT0M7QUFBZixDQUFoQixDQUFSO0FBQ0FwQixHQUFHLENBQUNhLEdBQUosQ0FBUWhCLGlCQUFRd0IsTUFBUixDQUFlQyxjQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsY0FBckIsQ0FBZixDQUFSLEUsQ0FFQTs7QUFDQXhCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLEdBQVIsRUFBYWpCLFlBQWI7QUFDQUksR0FBRyxDQUFDYSxHQUFKLENBQVEsTUFBUixFQUFnQmQsU0FBaEIsRSxDQUVBOztBQUNBQSxTQUFTLENBQUNjLEdBQVYsQ0FBYyxPQUFkLEVBQXVCWSxjQUF2QjtBQUNBMUIsU0FBUyxDQUFDYyxHQUFWLENBQWMsV0FBZCxFQUEyQmEsaUJBQTNCO0FBQ0EzQixTQUFTLENBQUM0QixHQUFWLENBQWMsU0FBZCxFQUF5QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNyQ0EsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQmIsSUFBaEIsQ0FBcUI7QUFDbkJjLElBQUFBLFNBQVMsRUFBRTtBQURRLEdBQXJCO0FBR0QsQ0FKRCxFLENBTUE7O0FBQ0EvQixHQUFHLENBQUNhLEdBQUosQ0FBUSxDQUFDZSxHQUFELEVBQU1DLEdBQU4sRUFBV0csSUFBWCxLQUFvQjtBQUMxQixRQUFNQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFVLDhCQUFWLENBQWQ7QUFDQUQsRUFBQUEsS0FBSyxDQUFDSCxNQUFOLEdBQWUsR0FBZjtBQUNBRSxFQUFBQSxJQUFJLENBQUNDLEtBQUQsQ0FBSjtBQUNELENBSkQ7QUFLQWpDLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLENBQUNvQixLQUFELEVBQVFMLEdBQVIsRUFBYUMsR0FBYixLQUFxQjtBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVdHLEtBQUssQ0FBQ0gsTUFBTixJQUFnQixHQUEzQjtBQUNBRCxFQUFBQSxHQUFHLENBQUNaLElBQUosQ0FBUztBQUNQZ0IsSUFBQUEsS0FBSyxFQUFFO0FBQ0xFLE1BQUFBLE9BQU8sRUFBRUYsS0FBSyxDQUFDRTtBQURWO0FBREEsR0FBVDtBQUtELENBUEQ7ZUFTZW5DLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL0x1a2V2ZWlsbGUvRG9jdW1lbnRzL0NvZGluZyBQcm9qZWN0cy9BcHBzL3BpY3RndXItbm9kZS9zcmMvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAgJ2V4cHJlc3MnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgcGljdHVyZVJvdXRlciBmcm9tICcuL2FwaS9yb3V0ZXMvcGljdHVyZXMnO1xuaW1wb3J0IHVzZXJSb3V0ZXIgZnJvbSAnLi9hcGkvcm91dGVzL3VzZXJzJztcblxuY29uc3QgcHVibGljUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGFwaVJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbm1vbmdvb3NlLmNvbm5lY3QoXG4gICdtb25nb2RiK3NydjovL25vZGUtc2hvcDonICtcbiAgcHJvY2Vzcy5lbnYuUElDVEdVUl9NT05HT19QVyArXG4gICdAY2x1c3RlcjAtZnZ4anUubW9uZ29kYi5uZXQvdGVzdD9yZXRyeVdyaXRlcz10cnVlJyxcbiAge1xuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxuICB9XG4pXG4uY2F0Y2goZXJyID0+IHsgY29uc29sZS5sb2coZXJyKSB9KTtcblxubW9uZ29vc2UuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7bGltaXQ6IGNvbmZpZy5ib2R5UGFyc2VyTGltaXR9KSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vLi4vYnVpbGQnKSkpO1xuXG4vLyBSb290IHJvdXRlc1xuYXBwLnVzZSgnLycsIHB1YmxpY1JvdXRlcik7XG5hcHAudXNlKCcvYXBpJywgYXBpUm91dGVyKTtcblxuLy8gQVBJIHJvdXRlc1xuYXBpUm91dGVyLnVzZSgnL3VzZXInLCB1c2VyUm91dGVyKTtcbmFwaVJvdXRlci51c2UoJy9waWN0dXJlcycsIHBpY3R1cmVSb3V0ZXIpO1xuYXBpUm91dGVyLmdldCgnL2hlYWx0aCcsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgYXBpU3RhdHVzOiBcIkhlYWx0aHkhXCJcbiAgfSk7XG59KTtcblxuLy8gRXJyb3JzXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignQ291bGQgbm90IGZpbmQgd2hhdCB5b3Ugc2VlaycpO1xuICBlcnJvci5zdGF0dXMgPSA0MDQ7XG4gIG5leHQoZXJyb3IpO1xufSk7XG5hcHAudXNlKChlcnJvciwgcmVxLCByZXMpID0+IHtcbiAgcmVzLnN0YXR1cyhlcnJvci5zdGF0dXMgfHwgNTAwKTtcbiAgcmVzLmpzb24oe1xuICAgIGVycm9yOiB7XG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXG4gICAgfVxuICB9KVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "publicRouter",
        "express",
        "Router",
        "apiRouter",
        "app",
        "mongoose",
        "connect",
        "process",
        "env",
        "PICTGUR_MONGO_PW",
        "useNewUrlParser",
        "catch",
        "err",
        "console",
        "log",
        "Promise",
        "global",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "limit",
        "config",
        "bodyParserLimit",
        "static",
        "path",
        "join",
        "__dirname",
        "userRouter",
        "pictureRouter",
        "get",
        "req",
        "res",
        "status",
        "apiStatus",
        "next",
        "error",
        "Error",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAGC,iBAAQC,MAAR,EAArB;;AACA,MAAMC,SAAS,GAAGF,iBAAQC,MAAR,EAAlB;;AACA,MAAME,GAAG,GAAG,uBAAZ;;AAEAC,kBAASC,OAAT,CACE,6BACAC,OAAO,CAACC,GAAR,CAAYC,gBADZ,GAEA,mDAHF,EAIE;AACEC,EAAAA,eAAe,EAAE;AADnB,CAJF,EAQCC,KARD,CAQOC,GAAG,IAAI;AAAEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB,CARlC;;AAUAP,kBAASU,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AAEAX,GAAG,CAACa,GAAJ,CAAQ,oBAAR;AACAb,GAAG,CAACa,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAhB,GAAG,CAACa,GAAJ,CAAQC,oBAAWG,IAAX,CAAgB;AAACC,EAAAA,KAAK,EAAEC,gBAAOC;AAAf,CAAhB,CAAR;AACApB,GAAG,CAACa,GAAJ,CAAQhB,iBAAQwB,MAAR,CAAeC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf,CAAR,E,CAEA;;AACAxB,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAajB,YAAb;AACAI,GAAG,CAACa,GAAJ,CAAQ,MAAR,EAAgBd,SAAhB,E,CAEA;;AACAA,SAAS,CAACc,GAAV,CAAc,OAAd,EAAuBY,cAAvB;AACA1B,SAAS,CAACc,GAAV,CAAc,WAAd,EAA2Ba,iBAA3B;AACA3B,SAAS,CAAC4B,GAAV,CAAc,SAAd,EAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqB;AACnBc,IAAAA,SAAS,EAAE;AADQ,GAArB;AAGD,CAJD,E,CAMA;;AACA/B,GAAG,CAACa,GAAJ,CAAQ,CAACe,GAAD,EAAMC,GAAN,EAAWG,IAAX,KAAoB;AAC1B,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,8BAAV,CAAd;AACAD,EAAAA,KAAK,CAACH,MAAN,GAAe,GAAf;AACAE,EAAAA,IAAI,CAACC,KAAD,CAAJ;AACD,CAJD;AAKAjC,GAAG,CAACa,GAAJ,CAAQ,CAACoB,KAAD,EAAQL,GAAR,EAAaC,GAAb,KAAqB;AAC3BA,EAAAA,GAAG,CAACC,MAAJ,CAAWG,KAAK,CAACH,MAAN,IAAgB,GAA3B;AACAD,EAAAA,GAAG,CAACZ,IAAJ,CAAS;AACPgB,IAAAA,KAAK,EAAE;AACLE,MAAAA,OAAO,EAAEF,KAAK,CAACE;AADV;AADA,GAAT;AAKD,CAPD;eASenC,G",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
      "sourcesContent": [
        "import express from  'express';\nimport path from 'path';\nimport config from 'config';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport pictureRouter from './api/routes/pictures';\nimport userRouter from './api/routes/users';\n\nconst publicRouter = express.Router();\nconst apiRouter = express.Router();\nconst app = express();\n\nmongoose.connect(\n  'mongodb+srv://node-shop:' +\n  process.env.PICTGUR_MONGO_PW +\n  '@cluster0-fvxju.mongodb.net/test?retryWrites=true',\n  {\n    useNewUrlParser: true\n  }\n)\n.catch(err => { console.log(err) });\n\nmongoose.Promise = global.Promise;\n\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json({limit: config.bodyParserLimit}));\napp.use(express.static(path.join(__dirname, '/../../build')));\n\n// Root routes\napp.use('/', publicRouter);\napp.use('/api', apiRouter);\n\n// API routes\napiRouter.use('/user', userRouter);\napiRouter.use('/pictures', pictureRouter);\napiRouter.get('/health', (req, res) => {\n  res.status(200).json({\n    apiStatus: \"Healthy!\"\n  });\n});\n\n// Errors\napp.use((req, res, next) => {\n  const error = new Error('Could not find what you seek');\n  error.status = 404;\n  next(error);\n});\napp.use((error, req, res) => {\n  res.status(error.status || 500);\n  res.json({\n    error: {\n      message: error.message\n    }\n  })\n});\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550458251050
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
        "sourceFileName": "pictures.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _picture = _interopRequireDefault(require(\"../models/picture\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pictureRouter = _express.default.Router();\n\npictureRouter.get('/', (req, res) => {\n  _picture.default.find().select('src alt _id').exec().then(docs => {\n    const response = {\n      count: docs.length,\n      pictures: docs.map(doc => ({\n        src: doc.src,\n        alt: doc.alt,\n        _id: doc._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + doc._id\n        }\n      }))\n    };\n    res.status(200).json(response);\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.post('/', (req, res) => {\n  const picture = new _picture.default({\n    _id: new _mongoose.default.Types.ObjectId(),\n    src: req.body.src,\n    alt: req.body.alt\n  });\n  picture.save().then(result => {\n    console.log(result);\n    res.status(201).json({\n      message: 'Posted!',\n      createdPicture: {\n        src: result.src,\n        alt: result.alt,\n        _id: result._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + result._id\n        }\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.get('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n\n  _picture.default.findById(id).select('name price _id').exec().then(doc => {\n    res.status(200).json({\n      picture: doc,\n      request: {\n        type: 'GET',\n        description: 'Get all pictures',\n        url: 'http://localhost:9095/api/pictures'\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.patch('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  const updateOps = {};\n\n  for (const ops of req.body) {\n    updateOps[ops.propName] = ops.value;\n  }\n\n  _picture.default.update({\n    _id: id\n  }, {\n    $set: updateOps\n  }).exec().then(result => {\n    res.status(200).json({\n      message: 'Picture updated',\n      request: {\n        type: 'GET',\n        url: 'http://localhost:9095/api/pictures/' + result._id\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.delete('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n\n  _picture.default.remove({\n    _id: id\n  }).exec().then(result => {\n    res.status(200).json({\n      message: 'Picture deleted',\n      request: {\n        type: 'POST',\n        url: 'http://localhost:9095/api/pictures/',\n        body: {\n          src: 'String',\n          alt: 'String'\n        }\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\nvar _default = pictureRouter;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "pictures.js"
      ],
      "names": [
        "pictureRouter",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "Picture",
        "find",
        "select",
        "exec",
        "then",
        "docs",
        "response",
        "count",
        "length",
        "pictures",
        "map",
        "doc",
        "src",
        "alt",
        "_id",
        "request",
        "type",
        "url",
        "status",
        "json",
        "catch",
        "err",
        "error",
        "post",
        "picture",
        "mongoose",
        "Types",
        "ObjectId",
        "body",
        "save",
        "result",
        "console",
        "log",
        "message",
        "createdPicture",
        "id",
        "params",
        "pictureId",
        "findById",
        "description",
        "patch",
        "updateOps",
        "ops",
        "propName",
        "value",
        "update",
        "$set",
        "delete",
        "remove"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\nimport Picture from '../models/picture';\n\nconst pictureRouter = express.Router();\n\npictureRouter.get('/', (req, res) => {\n  Picture.find()\n  .select('src alt _id')\n  .exec()\n  .then(docs => {\n    const response = {\n      count: docs.length,\n      pictures: docs.map(doc => ({\n        src: doc.src,\n        alt: doc.alt,\n        _id: doc._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + doc._id\n        }\n      }))\n    };\n    res.status(200).json(response);\n  })\n  .catch(err => {\n    res.status(500).json({error: err})\n  })\n});\n\npictureRouter.post('/', (req, res) => {\n  const picture = new Picture({\n    _id: new mongoose.Types.ObjectId(),\n    src: req.body.src,\n    alt: req.body.alt\n  });\n  picture.save().then(result => {\n    console.log(result);\n    res.status(201).json({\n      message: 'Posted!',\n      createdPicture: {\n        src: result.src,\n        alt: result.alt,\n        _id: result._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + result._id\n        }\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\npictureRouter.get('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  Picture.findById(id)\n  .select('name price _id')\n  .exec()\n  .then(doc => {\n    res.status(200).json({\n      picture: doc,\n      request: {\n        type: 'GET',\n        description: 'Get all pictures',\n        url: 'http://localhost:9095/api/pictures'\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\npictureRouter.patch('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  const updateOps = {};\n  for (const ops of req.body) {\n    updateOps[ops.propName] = ops.value\n  }\n  Picture.update({ _id: id }, { $set: updateOps })\n  .exec()\n  .then(result => {\n    res.status(200).json({\n      message: 'Picture updated',\n      request: {\n        type: 'GET',\n        url: 'http://localhost:9095/api/pictures/' + result._id\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\npictureRouter.delete('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  Picture.remove({_id: id})\n  .exec()\n  .then(result => {\n    res.status(200).json({\n      message: 'Picture deleted',\n      request: {\n        type: 'POST',\n        url: 'http://localhost:9095/api/pictures/',\n        body: { src: 'String', alt: 'String' }\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\nexport default pictureRouter;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550359106413
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
        "sourceFileName": "picture.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pictureSchema = _mongoose.default.Schema({\n  _id: _mongoose.default.Schema.Types.ObjectId,\n  src: {\n    type: String,\n    required: true\n  },\n  alt: {\n    type: String,\n    required: true\n  }\n});\n\nconst Picture = _mongoose.default.model('Picture', pictureSchema);\n\nvar _default = Picture;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpY3R1cmUuanMiXSwibmFtZXMiOlsicGljdHVyZVNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiX2lkIiwiVHlwZXMiLCJPYmplY3RJZCIsInNyYyIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImFsdCIsIlBpY3R1cmUiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsYUFBYSxHQUFHQyxrQkFBU0MsTUFBVCxDQUFnQjtBQUNwQ0MsRUFBQUEsR0FBRyxFQUFFRixrQkFBU0MsTUFBVCxDQUFnQkUsS0FBaEIsQ0FBc0JDLFFBRFM7QUFFcENDLEVBQUFBLEdBQUcsRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLElBQUFBLFFBQVEsRUFBRTtBQUExQixHQUYrQjtBQUdwQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQUVILElBQUFBLElBQUksRUFBRUMsTUFBUjtBQUFnQkMsSUFBQUEsUUFBUSxFQUFFO0FBQTFCO0FBSCtCLENBQWhCLENBQXRCOztBQU1BLE1BQU1FLE9BQU8sR0FBR1Ysa0JBQVNXLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWixhQUExQixDQUFoQjs7ZUFFZVcsTyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvTHVrZXZlaWxsZS9Eb2N1bWVudHMvQ29kaW5nIFByb2plY3RzL0FwcHMvcGljdGd1ci1ub2RlL3NyYy9zZXJ2ZXIvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IHBpY3R1cmVTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBfaWQ6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgc3JjOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgYWx0OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfVxufSk7XG5cbmNvbnN0IFBpY3R1cmUgPSBtb25nb29zZS5tb2RlbCgnUGljdHVyZScsIHBpY3R1cmVTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBQaWN0dXJlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "picture.js"
      ],
      "names": [
        "pictureSchema",
        "mongoose",
        "Schema",
        "_id",
        "Types",
        "ObjectId",
        "src",
        "type",
        "String",
        "required",
        "alt",
        "Picture",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,aAAa,GAAGC,kBAASC,MAAT,CAAgB;AACpCC,EAAAA,GAAG,EAAEF,kBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,QADS;AAEpCC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAF+B;AAGpCC,EAAAA,GAAG,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AAH+B,CAAhB,CAAtB;;AAMA,MAAME,OAAO,GAAGV,kBAASW,KAAT,CAAe,SAAf,EAA0BZ,aAA1B,CAAhB;;eAEeW,O",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst pictureSchema = mongoose.Schema({\n  _id: mongoose.Schema.Types.ObjectId,\n  src: { type: String, required: true },\n  alt: { type: String, required: true }\n});\n\nconst Picture = mongoose.model('Picture', pictureSchema);\n\nexport default Picture;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550458931881
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst userRouter = _express.default.Router();\n\nuserRouter.post('/signup', (req, res) => {\n  _user.default.find({\n    email: req.body.email\n  }).exec().then(user => {\n    if (user.length >= 1) {\n      return res.status(409).json({\n        message: 'email exists'\n      });\n    } else {\n      _bcrypt.default.hash(req.body.password, 10, (err, hash) => {\n        if (err) {\n          return res.status(500).json({\n            error: err\n          });\n        } else {\n          const user = new _user.default({\n            _id: new _mongoose.default.Types.ObjectId(),\n            email: req.body.email,\n            password: hash\n          });\n          user.save().then(result => {\n            res.status(201).json({\n              message: 'User created'\n            });\n          }).catch(err => {\n            res.status(500).json({\n              error: err\n            });\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n  });\n});\nuserRouter.delete('/:userId', (req, res) => {\n  _user.default.remove({\n    _id: req.params.userId\n  }).exec().then(result => {\n    res.status(200).json({\n      message: 'User deleted'\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\nvar _default = userRouter;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInVzZXJSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsInJlcSIsInJlcyIsIlVzZXIiLCJmaW5kIiwiZW1haWwiLCJib2R5IiwiZXhlYyIsInRoZW4iLCJ1c2VyIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJiY3J5cHQiLCJoYXNoIiwicGFzc3dvcmQiLCJlcnIiLCJlcnJvciIsIl9pZCIsIm1vbmdvb3NlIiwiVHlwZXMiLCJPYmplY3RJZCIsInNhdmUiLCJyZXN1bHQiLCJjYXRjaCIsImRlbGV0ZSIsInJlbW92ZSIsInBhcmFtcyIsInVzZXJJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyxpQkFBUUMsTUFBUixFQUFuQjs7QUFFQUYsVUFBVSxDQUFDRyxJQUFYLENBQWdCLFNBQWhCLEVBQTJCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3ZDQyxnQkFBS0MsSUFBTCxDQUFVO0FBQUVDLElBQUFBLEtBQUssRUFBRUosR0FBRyxDQUFDSyxJQUFKLENBQVNEO0FBQWxCLEdBQVYsRUFDQ0UsSUFERCxHQUVDQyxJQUZELENBRU1DLElBQUksSUFBSTtBQUNaLFFBQUlBLElBQUksQ0FBQ0MsTUFBTCxJQUFlLENBQW5CLEVBQXNCO0FBQ3BCLGFBQU9SLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCQyxRQUFBQSxPQUFPLEVBQUU7QUFEaUIsT0FBckIsQ0FBUDtBQUdELEtBSkQsTUFJTztBQUNMQyxzQkFBT0MsSUFBUCxDQUFZZCxHQUFHLENBQUNLLElBQUosQ0FBU1UsUUFBckIsRUFBK0IsRUFBL0IsRUFBbUMsQ0FBQ0MsR0FBRCxFQUFNRixJQUFOLEtBQWU7QUFDaEQsWUFBSUUsR0FBSixFQUFTO0FBQ1AsaUJBQU9mLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCTSxZQUFBQSxLQUFLLEVBQUVEO0FBRG1CLFdBQXJCLENBQVA7QUFHRCxTQUpELE1BSU87QUFDTCxnQkFBTVIsSUFBSSxHQUFHLElBQUlOLGFBQUosQ0FBUztBQUNwQmdCLFlBQUFBLEdBQUcsRUFBRSxJQUFJQyxrQkFBU0MsS0FBVCxDQUFlQyxRQUFuQixFQURlO0FBRXBCakIsWUFBQUEsS0FBSyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0QsS0FGSTtBQUdwQlcsWUFBQUEsUUFBUSxFQUFFRDtBQUhVLFdBQVQsQ0FBYjtBQUtBTixVQUFBQSxJQUFJLENBQUNjLElBQUwsR0FDQ2YsSUFERCxDQUNNZ0IsTUFBTSxJQUFJO0FBQ2R0QixZQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsY0FBQUEsT0FBTyxFQUFFO0FBRFUsYUFBckI7QUFHRCxXQUxELEVBTUNZLEtBTkQsQ0FNT1IsR0FBRyxJQUFJO0FBQ1pmLFlBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVNLGNBQUFBLEtBQUssRUFBRUQ7QUFBVCxhQUFyQjtBQUNELFdBUkQ7QUFTRDs7QUFBQTtBQUNGLE9BckJEO0FBc0JEOztBQUFBO0FBQ0YsR0EvQkQ7QUFnQ0QsQ0FqQ0Q7QUFtQ0FwQixVQUFVLENBQUM2QixNQUFYLENBQWtCLFVBQWxCLEVBQThCLENBQUN6QixHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQ0MsZ0JBQUt3QixNQUFMLENBQVk7QUFBQ1IsSUFBQUEsR0FBRyxFQUFFbEIsR0FBRyxDQUFDMkIsTUFBSixDQUFXQztBQUFqQixHQUFaLEVBQ0N0QixJQURELEdBRUNDLElBRkQsQ0FFTWdCLE1BQU0sSUFBSTtBQUNkdEIsSUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJDLE1BQUFBLE9BQU8sRUFBRTtBQURVLEtBQXJCO0FBR0QsR0FORCxFQU9DWSxLQVBELENBT09SLEdBQUcsSUFBSTtBQUNaZixJQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFTSxNQUFBQSxLQUFLLEVBQUVEO0FBQVQsS0FBckI7QUFDRCxHQVREO0FBVUQsQ0FYRDtlQWFlcEIsVSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvTHVrZXZlaWxsZS9Eb2N1bWVudHMvQ29kaW5nIFByb2plY3RzL0FwcHMvcGljdGd1ci1ub2RlL3NyYy9zZXJ2ZXIvYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyJztcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0JztcblxuY29uc3QgdXNlclJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbnVzZXJSb3V0ZXIucG9zdCgnL3NpZ251cCcsIChyZXEsIHJlcykgPT4ge1xuICBVc2VyLmZpbmQoeyBlbWFpbDogcmVxLmJvZHkuZW1haWwgfSlcbiAgLmV4ZWMoKVxuICAudGhlbih1c2VyID0+IHtcbiAgICBpZiAodXNlci5sZW5ndGggPj0gMSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA5KS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ2VtYWlsIGV4aXN0cydcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBiY3J5cHQuaGFzaChyZXEuYm9keS5wYXNzd29yZCwgMTAsIChlcnIsIGhhc2gpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBlcnJvcjogZXJyXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHtcbiAgICAgICAgICAgIF9pZDogbmV3IG1vbmdvb3NlLlR5cGVzLk9iamVjdElkKCksXG4gICAgICAgICAgICBlbWFpbDogcmVxLmJvZHkuZW1haWwsXG4gICAgICAgICAgICBwYXNzd29yZDogaGFzaFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHVzZXIuc2F2ZSgpXG4gICAgICAgICAgLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ1VzZXIgY3JlYXRlZCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnIgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9O1xuICB9KTtcbn0pO1xuXG51c2VyUm91dGVyLmRlbGV0ZSgnLzp1c2VySWQnLCAocmVxLCByZXMpID0+IHtcbiAgVXNlci5yZW1vdmUoe19pZDogcmVxLnBhcmFtcy51c2VySWR9KVxuICAuZXhlYygpXG4gIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgbWVzc2FnZTogJ1VzZXIgZGVsZXRlZCdcbiAgICB9KTtcbiAgfSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyIH0pO1xuICB9KTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1c2VyUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "User",
        "find",
        "email",
        "body",
        "exec",
        "then",
        "user",
        "length",
        "status",
        "json",
        "message",
        "bcrypt",
        "hash",
        "password",
        "err",
        "error",
        "_id",
        "mongoose",
        "Types",
        "ObjectId",
        "save",
        "result",
        "catch",
        "delete",
        "remove",
        "params",
        "userId"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvCC,gBAAKC,IAAL,CAAU;AAAEC,IAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAAlB,GAAV,EACCE,IADD,GAECC,IAFD,CAEMC,IAAI,IAAI;AACZ,QAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AACpB,aAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE;AADiB,OAArB,CAAP;AAGD,KAJD,MAIO;AACLC,sBAAOC,IAAP,CAAYd,GAAG,CAACK,IAAJ,CAASU,QAArB,EAA+B,EAA/B,EAAmC,CAACC,GAAD,EAAMF,IAAN,KAAe;AAChD,YAAIE,GAAJ,EAAS;AACP,iBAAOf,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BM,YAAAA,KAAK,EAAED;AADmB,WAArB,CAAP;AAGD,SAJD,MAIO;AACL,gBAAMR,IAAI,GAAG,IAAIN,aAAJ,CAAS;AACpBgB,YAAAA,GAAG,EAAE,IAAIC,kBAASC,KAAT,CAAeC,QAAnB,EADe;AAEpBjB,YAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD,KAFI;AAGpBW,YAAAA,QAAQ,EAAED;AAHU,WAAT,CAAb;AAKAN,UAAAA,IAAI,CAACc,IAAL,GACCf,IADD,CACMgB,MAAM,IAAI;AACdtB,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE;AADU,aAArB;AAGD,WALD,EAMCY,KAND,CAMOR,GAAG,IAAI;AACZf,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,cAAAA,KAAK,EAAED;AAAT,aAArB;AACD,WARD;AASD;;AAAA;AACF,OArBD;AAsBD;;AAAA;AACF,GA/BD;AAgCD,CAjCD;AAmCApB,UAAU,CAAC6B,MAAX,CAAkB,UAAlB,EAA8B,CAACzB,GAAD,EAAMC,GAAN,KAAc;AAC1CC,gBAAKwB,MAAL,CAAY;AAACR,IAAAA,GAAG,EAAElB,GAAG,CAAC2B,MAAJ,CAAWC;AAAjB,GAAZ,EACCtB,IADD,GAECC,IAFD,CAEMgB,MAAM,IAAI;AACdtB,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD,GAND,EAOCY,KAPD,CAOOR,GAAG,IAAI;AACZf,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,MAAAA,KAAK,EAAED;AAAT,KAArB;AACD,GATD;AAUD,CAXD;eAaepB,U",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\nimport User from '../models/user';\nimport bcrypt from 'bcrypt';\n\nconst userRouter = express.Router();\n\nuserRouter.post('/signup', (req, res) => {\n  User.find({ email: req.body.email })\n  .exec()\n  .then(user => {\n    if (user.length >= 1) {\n      return res.status(409).json({\n        message: 'email exists'\n      });\n    } else {\n      bcrypt.hash(req.body.password, 10, (err, hash) => {\n        if (err) {\n          return res.status(500).json({\n            error: err\n          });\n        } else {\n          const user = new User({\n            _id: new mongoose.Types.ObjectId(),\n            email: req.body.email,\n            password: hash\n          });\n          user.save()\n          .then(result => {\n            res.status(201).json({\n              message: 'User created'\n            });\n          })\n          .catch(err => {\n            res.status(500).json({ error: err });\n          });\n        };\n      });\n    };\n  });\n});\n\nuserRouter.delete('/:userId', (req, res) => {\n  User.remove({_id: req.params.userId})\n  .exec()\n  .then(result => {\n    res.status(200).json({\n      message: 'User deleted'\n    });\n  })\n  .catch(err => {\n    res.status(500).json({ error: err });\n  });\n});\n\nexport default userRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550460035914
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/user.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst userSchema = _mongoose.default.Schema({\n  _id: _mongoose.default.Schema.Types.ObjectId,\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    match: /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\n\nconst User = _mongoose.default.model('User', userSchema);\n\nvar _default = User;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiX2lkIiwiVHlwZXMiLCJPYmplY3RJZCIsImVtYWlsIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidW5pcXVlIiwibWF0Y2giLCJwYXNzd29yZCIsIlVzZXIiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyxrQkFBU0MsTUFBVCxDQUFnQjtBQUNqQ0MsRUFBQUEsR0FBRyxFQUFFRixrQkFBU0MsTUFBVCxDQUFnQkUsS0FBaEIsQ0FBc0JDLFFBRE07QUFFakNDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxJQUFJLEVBQUVDLE1BREQ7QUFFTEMsSUFBQUEsUUFBUSxFQUFFLElBRkw7QUFHTEMsSUFBQUEsTUFBTSxFQUFFLElBSEg7QUFJTEMsSUFBQUEsS0FBSyxFQUFFO0FBSkYsR0FGMEI7QUFRakNDLEVBQUFBLFFBQVEsRUFBRTtBQUFFTCxJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLElBQUFBLFFBQVEsRUFBRTtBQUExQjtBQVJ1QixDQUFoQixDQUFuQjs7QUFXQSxNQUFNSSxJQUFJLEdBQUdaLGtCQUFTYSxLQUFULENBQWUsTUFBZixFQUF1QmQsVUFBdkIsQ0FBYjs7ZUFFZWEsSSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvTHVrZXZlaWxsZS9Eb2N1bWVudHMvQ29kaW5nIFByb2plY3RzL0FwcHMvcGljdGd1ci1ub2RlL3NyYy9zZXJ2ZXIvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IHVzZXJTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBfaWQ6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgdW5pcXVlOiB0cnVlLFxuICAgIG1hdGNoOiAvXigoW148PigpXFxbXFxdXFwuLDs6XFxzQFxcXCJdKyhcXC5bXjw+KClcXFtcXF1cXC4sOzpcXHNAXFxcIl0rKSopfChcXFwiLitcXFwiKSlAKChbXjw+KClbXFxdXFwuLDs6XFxzQFxcXCJdK1xcLikrW148PigpW1xcXVxcLiw7Olxcc0BcXFwiXXsyLH0pJC9cbiAgfSxcbiAgcGFzc3dvcmQ6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9XG59KTtcblxuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVsKCdVc2VyJywgdXNlclNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IFVzZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "userSchema",
        "mongoose",
        "Schema",
        "_id",
        "Types",
        "ObjectId",
        "email",
        "type",
        "String",
        "required",
        "unique",
        "match",
        "password",
        "User",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,UAAU,GAAGC,kBAASC,MAAT,CAAgB;AACjCC,EAAAA,GAAG,EAAEF,kBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,QADM;AAEjCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,MAAM,EAAE,IAHH;AAILC,IAAAA,KAAK,EAAE;AAJF,GAF0B;AAQjCC,EAAAA,QAAQ,EAAE;AAAEL,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AARuB,CAAhB,CAAnB;;AAWA,MAAMI,IAAI,GAAGZ,kBAASa,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAb;;eAEea,I",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst userSchema = mongoose.Schema({\n  _id: mongoose.Schema.Types.ObjectId,\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    match: /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/\n  },\n  password: { type: String, required: true }\n});\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550460180335
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _config = _interopRequireDefault(require(\"config\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _pictures = _interopRequireDefault(require(\"./api/routes/pictures\"));\n\nvar _users = _interopRequireDefault(require(\"./api/routes/users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst publicRouter = _express.default.Router();\n\nconst apiRouter = _express.default.Router();\n\nconst app = (0, _express.default)();\n\n_mongoose.default.connect('mongodb+srv://node-shop:' + process.env.PICTGUR_MONGO_PW + '@cluster0-fvxju.mongodb.net/test?retryWrites=true', {\n  useNewUrlParser: true\n}).catch(err => {\n  console.log(err);\n});\n\n_mongoose.default.Promise = global.Promise;\napp.use((0, _cors.default)());\napp.use(_bodyParser.default.urlencoded({\n  extended: false\n}));\napp.use(_bodyParser.default.json({\n  limit: _config.default.bodyParserLimit\n}));\napp.use(_express.default.static(_path.default.join(__dirname, '/../../build'))); // Root routes\n\napp.use('/', publicRouter);\napp.use('/api', apiRouter); // API routes\n\napiRouter.use('/user', _users.default);\napiRouter.use('/pictures', _pictures.default);\napiRouter.get('/health', (req, res) => {\n  res.status(200).json({\n    apiStatus: \"Healthy!\"\n  });\n}); // Errors\n\napp.use((req, res, next) => {\n  const error = new Error('Could not find what you seek');\n  error.status = 404;\n  next(error);\n});\napp.use((error, req, res) => {\n  res.status(error.status || 500);\n  res.json({\n    error: {\n      message: error.message\n    }\n  });\n});\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJwdWJsaWNSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiYXBpUm91dGVyIiwiYXBwIiwibW9uZ29vc2UiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIlBJQ1RHVVJfTU9OR09fUFciLCJ1c2VOZXdVcmxQYXJzZXIiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJQcm9taXNlIiwiZ2xvYmFsIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJsaW1pdCIsImNvbmZpZyIsImJvZHlQYXJzZXJMaW1pdCIsInN0YXRpYyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwidXNlclJvdXRlciIsInBpY3R1cmVSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJhcGlTdGF0dXMiLCJuZXh0IiwiZXJyb3IiLCJFcnJvciIsIm1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLFlBQVksR0FBR0MsaUJBQVFDLE1BQVIsRUFBckI7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHRixpQkFBUUMsTUFBUixFQUFsQjs7QUFDQSxNQUFNRSxHQUFHLEdBQUcsdUJBQVo7O0FBRUFDLGtCQUFTQyxPQUFULENBQ0UsNkJBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFEWixHQUVBLG1EQUhGLEVBSUU7QUFDRUMsRUFBQUEsZUFBZSxFQUFFO0FBRG5CLENBSkYsRUFRQ0MsS0FSRCxDQVFPQyxHQUFHLElBQUk7QUFBRUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVo7QUFBa0IsQ0FSbEM7O0FBVUFQLGtCQUFTVSxPQUFULEdBQW1CQyxNQUFNLENBQUNELE9BQTFCO0FBRUFYLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLG9CQUFSO0FBQ0FiLEdBQUcsQ0FBQ2EsR0FBSixDQUFRQyxvQkFBV0MsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FoQixHQUFHLENBQUNhLEdBQUosQ0FBUUMsb0JBQVdHLElBQVgsQ0FBZ0I7QUFBQ0MsRUFBQUEsS0FBSyxFQUFFQyxnQkFBT0M7QUFBZixDQUFoQixDQUFSO0FBQ0FwQixHQUFHLENBQUNhLEdBQUosQ0FBUWhCLGlCQUFRd0IsTUFBUixDQUFlQyxjQUFLQyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsY0FBckIsQ0FBZixDQUFSLEUsQ0FFQTs7QUFDQXhCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLEdBQVIsRUFBYWpCLFlBQWI7QUFDQUksR0FBRyxDQUFDYSxHQUFKLENBQVEsTUFBUixFQUFnQmQsU0FBaEIsRSxDQUVBOztBQUNBQSxTQUFTLENBQUNjLEdBQVYsQ0FBYyxPQUFkLEVBQXVCWSxjQUF2QjtBQUNBMUIsU0FBUyxDQUFDYyxHQUFWLENBQWMsV0FBZCxFQUEyQmEsaUJBQTNCO0FBQ0EzQixTQUFTLENBQUM0QixHQUFWLENBQWMsU0FBZCxFQUF5QixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNyQ0EsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQmIsSUFBaEIsQ0FBcUI7QUFDbkJjLElBQUFBLFNBQVMsRUFBRTtBQURRLEdBQXJCO0FBR0QsQ0FKRCxFLENBTUE7O0FBQ0EvQixHQUFHLENBQUNhLEdBQUosQ0FBUSxDQUFDZSxHQUFELEVBQU1DLEdBQU4sRUFBV0csSUFBWCxLQUFvQjtBQUMxQixRQUFNQyxLQUFLLEdBQUcsSUFBSUMsS0FBSixDQUFVLDhCQUFWLENBQWQ7QUFDQUQsRUFBQUEsS0FBSyxDQUFDSCxNQUFOLEdBQWUsR0FBZjtBQUNBRSxFQUFBQSxJQUFJLENBQUNDLEtBQUQsQ0FBSjtBQUNELENBSkQ7QUFLQWpDLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLENBQUNvQixLQUFELEVBQVFMLEdBQVIsRUFBYUMsR0FBYixLQUFxQjtBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVdHLEtBQUssQ0FBQ0gsTUFBTixJQUFnQixHQUEzQjtBQUNBRCxFQUFBQSxHQUFHLENBQUNaLElBQUosQ0FBUztBQUNQZ0IsSUFBQUEsS0FBSyxFQUFFO0FBQ0xFLE1BQUFBLE9BQU8sRUFBRUYsS0FBSyxDQUFDRTtBQURWO0FBREEsR0FBVDtBQUtELENBUEQ7ZUFTZW5DLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL0x1a2V2ZWlsbGUvRG9jdW1lbnRzL0NvZGluZyBQcm9qZWN0cy9BcHBzL3BpY3RndXItbm9kZS9zcmMvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAgJ2V4cHJlc3MnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgY29uZmlnIGZyb20gJ2NvbmZpZyc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgcGljdHVyZVJvdXRlciBmcm9tICcuL2FwaS9yb3V0ZXMvcGljdHVyZXMnO1xuaW1wb3J0IHVzZXJSb3V0ZXIgZnJvbSAnLi9hcGkvcm91dGVzL3VzZXJzJztcblxuY29uc3QgcHVibGljUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGFwaVJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbm1vbmdvb3NlLmNvbm5lY3QoXG4gICdtb25nb2RiK3NydjovL25vZGUtc2hvcDonICtcbiAgcHJvY2Vzcy5lbnYuUElDVEdVUl9NT05HT19QVyArXG4gICdAY2x1c3RlcjAtZnZ4anUubW9uZ29kYi5uZXQvdGVzdD9yZXRyeVdyaXRlcz10cnVlJyxcbiAge1xuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxuICB9XG4pXG4uY2F0Y2goZXJyID0+IHsgY29uc29sZS5sb2coZXJyKSB9KTtcblxubW9uZ29vc2UuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbih7bGltaXQ6IGNvbmZpZy5ib2R5UGFyc2VyTGltaXR9KSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcvLi4vLi4vYnVpbGQnKSkpO1xuXG4vLyBSb290IHJvdXRlc1xuYXBwLnVzZSgnLycsIHB1YmxpY1JvdXRlcik7XG5hcHAudXNlKCcvYXBpJywgYXBpUm91dGVyKTtcblxuLy8gQVBJIHJvdXRlc1xuYXBpUm91dGVyLnVzZSgnL3VzZXInLCB1c2VyUm91dGVyKTtcbmFwaVJvdXRlci51c2UoJy9waWN0dXJlcycsIHBpY3R1cmVSb3V0ZXIpO1xuYXBpUm91dGVyLmdldCgnL2hlYWx0aCcsIChyZXEsIHJlcykgPT4ge1xuICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgYXBpU3RhdHVzOiBcIkhlYWx0aHkhXCJcbiAgfSk7XG59KTtcblxuLy8gRXJyb3JzXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcignQ291bGQgbm90IGZpbmQgd2hhdCB5b3Ugc2VlaycpO1xuICBlcnJvci5zdGF0dXMgPSA0MDQ7XG4gIG5leHQoZXJyb3IpO1xufSk7XG5hcHAudXNlKChlcnJvciwgcmVxLCByZXMpID0+IHtcbiAgcmVzLnN0YXR1cyhlcnJvci5zdGF0dXMgfHwgNTAwKTtcbiAgcmVzLmpzb24oe1xuICAgIGVycm9yOiB7XG4gICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlXG4gICAgfVxuICB9KVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "publicRouter",
        "express",
        "Router",
        "apiRouter",
        "app",
        "mongoose",
        "connect",
        "process",
        "env",
        "PICTGUR_MONGO_PW",
        "useNewUrlParser",
        "catch",
        "err",
        "console",
        "log",
        "Promise",
        "global",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "limit",
        "config",
        "bodyParserLimit",
        "static",
        "path",
        "join",
        "__dirname",
        "userRouter",
        "pictureRouter",
        "get",
        "req",
        "res",
        "status",
        "apiStatus",
        "next",
        "error",
        "Error",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAGC,iBAAQC,MAAR,EAArB;;AACA,MAAMC,SAAS,GAAGF,iBAAQC,MAAR,EAAlB;;AACA,MAAME,GAAG,GAAG,uBAAZ;;AAEAC,kBAASC,OAAT,CACE,6BACAC,OAAO,CAACC,GAAR,CAAYC,gBADZ,GAEA,mDAHF,EAIE;AACEC,EAAAA,eAAe,EAAE;AADnB,CAJF,EAQCC,KARD,CAQOC,GAAG,IAAI;AAAEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB,CARlC;;AAUAP,kBAASU,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AAEAX,GAAG,CAACa,GAAJ,CAAQ,oBAAR;AACAb,GAAG,CAACa,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAhB,GAAG,CAACa,GAAJ,CAAQC,oBAAWG,IAAX,CAAgB;AAACC,EAAAA,KAAK,EAAEC,gBAAOC;AAAf,CAAhB,CAAR;AACApB,GAAG,CAACa,GAAJ,CAAQhB,iBAAQwB,MAAR,CAAeC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf,CAAR,E,CAEA;;AACAxB,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAajB,YAAb;AACAI,GAAG,CAACa,GAAJ,CAAQ,MAAR,EAAgBd,SAAhB,E,CAEA;;AACAA,SAAS,CAACc,GAAV,CAAc,OAAd,EAAuBY,cAAvB;AACA1B,SAAS,CAACc,GAAV,CAAc,WAAd,EAA2Ba,iBAA3B;AACA3B,SAAS,CAAC4B,GAAV,CAAc,SAAd,EAAyB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBb,IAAhB,CAAqB;AACnBc,IAAAA,SAAS,EAAE;AADQ,GAArB;AAGD,CAJD,E,CAMA;;AACA/B,GAAG,CAACa,GAAJ,CAAQ,CAACe,GAAD,EAAMC,GAAN,EAAWG,IAAX,KAAoB;AAC1B,QAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,8BAAV,CAAd;AACAD,EAAAA,KAAK,CAACH,MAAN,GAAe,GAAf;AACAE,EAAAA,IAAI,CAACC,KAAD,CAAJ;AACD,CAJD;AAKAjC,GAAG,CAACa,GAAJ,CAAQ,CAACoB,KAAD,EAAQL,GAAR,EAAaC,GAAb,KAAqB;AAC3BA,EAAAA,GAAG,CAACC,MAAJ,CAAWG,KAAK,CAACH,MAAN,IAAgB,GAA3B;AACAD,EAAAA,GAAG,CAACZ,IAAJ,CAAS;AACPgB,IAAAA,KAAK,EAAE;AACLE,MAAAA,OAAO,EAAEF,KAAK,CAACE;AADV;AADA,GAAT;AAKD,CAPD;eASenC,G",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server",
      "sourcesContent": [
        "import express from  'express';\nimport path from 'path';\nimport config from 'config';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport pictureRouter from './api/routes/pictures';\nimport userRouter from './api/routes/users';\n\nconst publicRouter = express.Router();\nconst apiRouter = express.Router();\nconst app = express();\n\nmongoose.connect(\n  'mongodb+srv://node-shop:' +\n  process.env.PICTGUR_MONGO_PW +\n  '@cluster0-fvxju.mongodb.net/test?retryWrites=true',\n  {\n    useNewUrlParser: true\n  }\n)\n.catch(err => { console.log(err) });\n\nmongoose.Promise = global.Promise;\n\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json({limit: config.bodyParserLimit}));\napp.use(express.static(path.join(__dirname, '/../../build')));\n\n// Root routes\napp.use('/', publicRouter);\napp.use('/api', apiRouter);\n\n// API routes\napiRouter.use('/user', userRouter);\napiRouter.use('/pictures', pictureRouter);\napiRouter.get('/health', (req, res) => {\n  res.status(200).json({\n    apiStatus: \"Healthy!\"\n  });\n});\n\n// Errors\napp.use((req, res, next) => {\n  const error = new Error('Could not find what you seek');\n  error.status = 404;\n  next(error);\n});\napp.use((error, req, res) => {\n  res.status(error.status || 500);\n  res.json({\n    error: {\n      message: error.message\n    }\n  })\n});\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550458251050
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/pictures.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
        "sourceFileName": "pictures.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _picture = _interopRequireDefault(require(\"../models/picture\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pictureRouter = _express.default.Router();\n\npictureRouter.get('/', (req, res) => {\n  _picture.default.find().select('src alt _id').exec().then(docs => {\n    const response = {\n      count: docs.length,\n      pictures: docs.map(doc => ({\n        src: doc.src,\n        alt: doc.alt,\n        _id: doc._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + doc._id\n        }\n      }))\n    };\n    res.status(200).json(response);\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.post('/', (req, res) => {\n  const picture = new _picture.default({\n    _id: new _mongoose.default.Types.ObjectId(),\n    src: req.body.src,\n    alt: req.body.alt\n  });\n  picture.save().then(result => {\n    console.log(result);\n    res.status(201).json({\n      message: 'Posted!',\n      createdPicture: {\n        src: result.src,\n        alt: result.alt,\n        _id: result._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + result._id\n        }\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.get('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n\n  _picture.default.findById(id).select('name price _id').exec().then(doc => {\n    res.status(200).json({\n      picture: doc,\n      request: {\n        type: 'GET',\n        description: 'Get all pictures',\n        url: 'http://localhost:9095/api/pictures'\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.patch('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  const updateOps = {};\n\n  for (const ops of req.body) {\n    updateOps[ops.propName] = ops.value;\n  }\n\n  _picture.default.update({\n    _id: id\n  }, {\n    $set: updateOps\n  }).exec().then(result => {\n    res.status(200).json({\n      message: 'Picture updated',\n      request: {\n        type: 'GET',\n        url: 'http://localhost:9095/api/pictures/' + result._id\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\npictureRouter.delete('/:pictureId', (req, res) => {\n  _picture.default.remove({\n    _id: req.params.pictureId\n  }).exec().then(result => {\n    res.status(200).json({\n      message: 'Picture deleted',\n      request: {\n        type: 'POST',\n        url: 'http://localhost:9095/api/pictures/',\n        body: {\n          src: 'String',\n          alt: 'String'\n        }\n      }\n    });\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n  });\n});\nvar _default = pictureRouter;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "pictures.js"
      ],
      "names": [
        "pictureRouter",
        "express",
        "Router",
        "get",
        "req",
        "res",
        "Picture",
        "find",
        "select",
        "exec",
        "then",
        "docs",
        "response",
        "count",
        "length",
        "pictures",
        "map",
        "doc",
        "src",
        "alt",
        "_id",
        "request",
        "type",
        "url",
        "status",
        "json",
        "catch",
        "err",
        "error",
        "post",
        "picture",
        "mongoose",
        "Types",
        "ObjectId",
        "body",
        "save",
        "result",
        "console",
        "log",
        "message",
        "createdPicture",
        "id",
        "params",
        "pictureId",
        "findById",
        "description",
        "patch",
        "updateOps",
        "ops",
        "propName",
        "value",
        "update",
        "$set",
        "delete",
        "remove"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\nimport Picture from '../models/picture';\n\nconst pictureRouter = express.Router();\n\npictureRouter.get('/', (req, res) => {\n  Picture.find()\n  .select('src alt _id')\n  .exec()\n  .then(docs => {\n    const response = {\n      count: docs.length,\n      pictures: docs.map(doc => ({\n        src: doc.src,\n        alt: doc.alt,\n        _id: doc._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + doc._id\n        }\n      }))\n    };\n    res.status(200).json(response);\n  })\n  .catch(err => {\n    res.status(500).json({error: err})\n  })\n});\n\npictureRouter.post('/', (req, res) => {\n  const picture = new Picture({\n    _id: new mongoose.Types.ObjectId(),\n    src: req.body.src,\n    alt: req.body.alt\n  });\n  picture.save().then(result => {\n    console.log(result);\n    res.status(201).json({\n      message: 'Posted!',\n      createdPicture: {\n        src: result.src,\n        alt: result.alt,\n        _id: result._id,\n        request: {\n          type: 'GET',\n          url: 'http://localhost:9095/api/pictures/' + result._id\n        }\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\npictureRouter.get('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  Picture.findById(id)\n  .select('name price _id')\n  .exec()\n  .then(doc => {\n    res.status(200).json({\n      picture: doc,\n      request: {\n        type: 'GET',\n        description: 'Get all pictures',\n        url: 'http://localhost:9095/api/pictures'\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\npictureRouter.patch('/:pictureId', (req, res) => {\n  const id = req.params.pictureId;\n  const updateOps = {};\n  for (const ops of req.body) {\n    updateOps[ops.propName] = ops.value\n  }\n  Picture.update({ _id: id }, { $set: updateOps })\n  .exec()\n  .then(result => {\n    res.status(200).json({\n      message: 'Picture updated',\n      request: {\n        type: 'GET',\n        url: 'http://localhost:9095/api/pictures/' + result._id\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\npictureRouter.delete('/:pictureId', (req, res) => {\n  Picture.remove({_id: req.params.pictureId})\n  .exec()\n  .then(result => {\n    res.status(200).json({\n      message: 'Picture deleted',\n      request: {\n        type: 'POST',\n        url: 'http://localhost:9095/api/pictures/',\n        body: { src: 'String', alt: 'String' }\n      }\n    });\n  })\n  .catch(err => {\n    res.status(500).json({error: err});\n  });\n});\n\nexport default pictureRouter;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550459808440
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models/picture.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
        "sourceFileName": "picture.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst pictureSchema = _mongoose.default.Schema({\n  _id: _mongoose.default.Schema.Types.ObjectId,\n  src: {\n    type: String,\n    required: true\n  },\n  alt: {\n    type: String,\n    required: true\n  }\n});\n\nconst Picture = _mongoose.default.model('Picture', pictureSchema);\n\nvar _default = Picture;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpY3R1cmUuanMiXSwibmFtZXMiOlsicGljdHVyZVNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiX2lkIiwiVHlwZXMiLCJPYmplY3RJZCIsInNyYyIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImFsdCIsIlBpY3R1cmUiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsYUFBYSxHQUFHQyxrQkFBU0MsTUFBVCxDQUFnQjtBQUNwQ0MsRUFBQUEsR0FBRyxFQUFFRixrQkFBU0MsTUFBVCxDQUFnQkUsS0FBaEIsQ0FBc0JDLFFBRFM7QUFFcENDLEVBQUFBLEdBQUcsRUFBRTtBQUFFQyxJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLElBQUFBLFFBQVEsRUFBRTtBQUExQixHQUYrQjtBQUdwQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQUVILElBQUFBLElBQUksRUFBRUMsTUFBUjtBQUFnQkMsSUFBQUEsUUFBUSxFQUFFO0FBQTFCO0FBSCtCLENBQWhCLENBQXRCOztBQU1BLE1BQU1FLE9BQU8sR0FBR1Ysa0JBQVNXLEtBQVQsQ0FBZSxTQUFmLEVBQTBCWixhQUExQixDQUFoQjs7ZUFFZVcsTyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvTHVrZXZlaWxsZS9Eb2N1bWVudHMvQ29kaW5nIFByb2plY3RzL0FwcHMvcGljdGd1ci1ub2RlL3NyYy9zZXJ2ZXIvYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IHBpY3R1cmVTY2hlbWEgPSBtb25nb29zZS5TY2hlbWEoe1xuICBfaWQ6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgc3JjOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgYWx0OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfVxufSk7XG5cbmNvbnN0IFBpY3R1cmUgPSBtb25nb29zZS5tb2RlbCgnUGljdHVyZScsIHBpY3R1cmVTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBQaWN0dXJlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "picture.js"
      ],
      "names": [
        "pictureSchema",
        "mongoose",
        "Schema",
        "_id",
        "Types",
        "ObjectId",
        "src",
        "type",
        "String",
        "required",
        "alt",
        "Picture",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,MAAMA,aAAa,GAAGC,kBAASC,MAAT,CAAgB;AACpCC,EAAAA,GAAG,EAAEF,kBAASC,MAAT,CAAgBE,KAAhB,CAAsBC,QADS;AAEpCC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAF+B;AAGpCC,EAAAA,GAAG,EAAE;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AAH+B,CAAhB,CAAtB;;AAMA,MAAME,OAAO,GAAGV,kBAASW,KAAT,CAAe,SAAf,EAA0BZ,aAA1B,CAAhB;;eAEeW,O",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/models",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst pictureSchema = mongoose.Schema({\n  _id: mongoose.Schema.Types.ObjectId,\n  src: { type: String, required: true },\n  alt: { type: String, required: true }\n});\n\nconst Picture = mongoose.model('Picture', pictureSchema);\n\nexport default Picture;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550458931881
  },
  "{\"sourceRoot\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"filename\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _user = _interopRequireDefault(require(\"../models/user\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst userRouter = _express.default.Router();\n\nuserRouter.post('/signup', (req, res) => {\n  _user.default.find({\n    email: req.body.email\n  }).exec().then(user => {\n    if (user.length >= 1) {\n      return res.status(409).json({\n        message: 'email exists'\n      });\n    } else {\n      _bcrypt.default.hash(req.body.password, 10, (err, hash) => {\n        if (err) {\n          return res.status(500).json({\n            error: err\n          });\n        } else {\n          const user = new _user.default({\n            _id: new _mongoose.default.Types.ObjectId(),\n            email: req.body.email,\n            password: hash\n          });\n          user.save().then(result => {\n            res.status(201).json({\n              message: 'User created'\n            });\n          }).catch(err => {\n            res.status(500).json({\n              error: err\n            });\n          });\n        }\n\n        ;\n      });\n    }\n\n    ;\n  });\n});\nvar _default = userRouter;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInVzZXJSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsInJlcSIsInJlcyIsIlVzZXIiLCJmaW5kIiwiZW1haWwiLCJib2R5IiwiZXhlYyIsInRoZW4iLCJ1c2VyIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJiY3J5cHQiLCJoYXNoIiwicGFzc3dvcmQiLCJlcnIiLCJlcnJvciIsIl9pZCIsIm1vbmdvb3NlIiwiVHlwZXMiLCJPYmplY3RJZCIsInNhdmUiLCJyZXN1bHQiLCJjYXRjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsVUFBVSxHQUFHQyxpQkFBUUMsTUFBUixFQUFuQjs7QUFFQUYsVUFBVSxDQUFDRyxJQUFYLENBQWdCLFNBQWhCLEVBQTJCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3ZDQyxnQkFBS0MsSUFBTCxDQUFVO0FBQUVDLElBQUFBLEtBQUssRUFBRUosR0FBRyxDQUFDSyxJQUFKLENBQVNEO0FBQWxCLEdBQVYsRUFDQ0UsSUFERCxHQUVDQyxJQUZELENBRU1DLElBQUksSUFBSTtBQUNaLFFBQUlBLElBQUksQ0FBQ0MsTUFBTCxJQUFlLENBQW5CLEVBQXNCO0FBQ3BCLGFBQU9SLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCQyxRQUFBQSxPQUFPLEVBQUU7QUFEaUIsT0FBckIsQ0FBUDtBQUdELEtBSkQsTUFJTztBQUNMQyxzQkFBT0MsSUFBUCxDQUFZZCxHQUFHLENBQUNLLElBQUosQ0FBU1UsUUFBckIsRUFBK0IsRUFBL0IsRUFBbUMsQ0FBQ0MsR0FBRCxFQUFNRixJQUFOLEtBQWU7QUFDaEQsWUFBSUUsR0FBSixFQUFTO0FBQ1AsaUJBQU9mLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCTSxZQUFBQSxLQUFLLEVBQUVEO0FBRG1CLFdBQXJCLENBQVA7QUFHRCxTQUpELE1BSU87QUFDTCxnQkFBTVIsSUFBSSxHQUFHLElBQUlOLGFBQUosQ0FBUztBQUNwQmdCLFlBQUFBLEdBQUcsRUFBRSxJQUFJQyxrQkFBU0MsS0FBVCxDQUFlQyxRQUFuQixFQURlO0FBRXBCakIsWUFBQUEsS0FBSyxFQUFFSixHQUFHLENBQUNLLElBQUosQ0FBU0QsS0FGSTtBQUdwQlcsWUFBQUEsUUFBUSxFQUFFRDtBQUhVLFdBQVQsQ0FBYjtBQUtBTixVQUFBQSxJQUFJLENBQUNjLElBQUwsR0FDQ2YsSUFERCxDQUNNZ0IsTUFBTSxJQUFJO0FBQ2R0QixZQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNuQkMsY0FBQUEsT0FBTyxFQUFFO0FBRFUsYUFBckI7QUFHRCxXQUxELEVBTUNZLEtBTkQsQ0FNT1IsR0FBRyxJQUFJO0FBQ1pmLFlBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVNLGNBQUFBLEtBQUssRUFBRUQ7QUFBVCxhQUFyQjtBQUNELFdBUkQ7QUFTRDs7QUFBQTtBQUNGLE9BckJEO0FBc0JEOztBQUFBO0FBQ0YsR0EvQkQ7QUFnQ0QsQ0FqQ0Q7ZUFtQ2VwQixVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9MdWtldmVpbGxlL0RvY3VtZW50cy9Db2RpbmcgUHJvamVjdHMvQXBwcy9waWN0Z3VyLW5vZGUvc3JjL3NlcnZlci9hcGkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vbW9kZWxzL3VzZXInO1xuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnO1xuXG5jb25zdCB1c2VyUm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxudXNlclJvdXRlci5wb3N0KCcvc2lnbnVwJywgKHJlcSwgcmVzKSA9PiB7XG4gIFVzZXIuZmluZCh7IGVtYWlsOiByZXEuYm9keS5lbWFpbCB9KVxuICAuZXhlYygpXG4gIC50aGVuKHVzZXIgPT4ge1xuICAgIGlmICh1c2VyLmxlbmd0aCA+PSAxKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDkpLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnZW1haWwgZXhpc3RzJ1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJjcnlwdC5oYXNoKHJlcS5ib2R5LnBhc3N3b3JkLCAxMCwgKGVyciwgaGFzaCkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIGVycm9yOiBlcnJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoe1xuICAgICAgICAgICAgX2lkOiBuZXcgbW9uZ29vc2UuVHlwZXMuT2JqZWN0SWQoKSxcbiAgICAgICAgICAgIGVtYWlsOiByZXEuYm9keS5lbWFpbCxcbiAgICAgICAgICAgIHBhc3N3b3JkOiBoYXNoXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdXNlci5zYXZlKClcbiAgICAgICAgICAudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICAgICAgICBtZXNzYWdlOiAnVXNlciBjcmVhdGVkJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVyciB9KVxuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlclJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "post",
        "req",
        "res",
        "User",
        "find",
        "email",
        "body",
        "exec",
        "then",
        "user",
        "length",
        "status",
        "json",
        "message",
        "bcrypt",
        "hash",
        "password",
        "err",
        "error",
        "_id",
        "mongoose",
        "Types",
        "ObjectId",
        "save",
        "result",
        "catch"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,GAAGC,iBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CAACG,IAAX,CAAgB,SAAhB,EAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvCC,gBAAKC,IAAL,CAAU;AAAEC,IAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAAlB,GAAV,EACCE,IADD,GAECC,IAFD,CAEMC,IAAI,IAAI;AACZ,QAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AACpB,aAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE;AADiB,OAArB,CAAP;AAGD,KAJD,MAIO;AACLC,sBAAOC,IAAP,CAAYd,GAAG,CAACK,IAAJ,CAASU,QAArB,EAA+B,EAA/B,EAAmC,CAACC,GAAD,EAAMF,IAAN,KAAe;AAChD,YAAIE,GAAJ,EAAS;AACP,iBAAOf,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BM,YAAAA,KAAK,EAAED;AADmB,WAArB,CAAP;AAGD,SAJD,MAIO;AACL,gBAAMR,IAAI,GAAG,IAAIN,aAAJ,CAAS;AACpBgB,YAAAA,GAAG,EAAE,IAAIC,kBAASC,KAAT,CAAeC,QAAnB,EADe;AAEpBjB,YAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD,KAFI;AAGpBW,YAAAA,QAAQ,EAAED;AAHU,WAAT,CAAb;AAKAN,UAAAA,IAAI,CAACc,IAAL,GACCf,IADD,CACMgB,MAAM,IAAI;AACdtB,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE;AADU,aAArB;AAGD,WALD,EAMCY,KAND,CAMOR,GAAG,IAAI;AACZf,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,cAAAA,KAAK,EAAED;AAAT,aAArB;AACD,WARD;AASD;;AAAA;AACF,OArBD;AAsBD;;AAAA;AACF,GA/BD;AAgCD,CAjCD;eAmCepB,U",
      "sourceRoot": "/Users/Lukeveille/Documents/Coding Projects/Apps/pictgur-node/src/server/api/routes",
      "sourcesContent": [
        "import express from 'express';\nimport mongoose from 'mongoose';\nimport User from '../models/user';\nimport bcrypt from 'bcrypt';\n\nconst userRouter = express.Router();\n\nuserRouter.post('/signup', (req, res) => {\n  User.find({ email: req.body.email })\n  .exec()\n  .then(user => {\n    if (user.length >= 1) {\n      return res.status(409).json({\n        message: 'email exists'\n      });\n    } else {\n      bcrypt.hash(req.body.password, 10, (err, hash) => {\n        if (err) {\n          return res.status(500).json({\n            error: err\n          });\n        } else {\n          const user = new User({\n            _id: new mongoose.Types.ObjectId(),\n            email: req.body.email,\n            password: hash\n          });\n          user.save()\n          .then(result => {\n            res.status(201).json({\n              message: 'User created'\n            });\n          })\n          .catch(err => {\n            res.status(500).json({ error: err })\n          });\n        };\n      });\n    };\n  });\n});\n\nexport default userRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1550459529006
  }
}